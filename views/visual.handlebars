<!DOCTYPE html>
<script type="text/javascript" src="javascript/states.js"></script>
<script type="text/javascript" src="http://www.google.com/jsapi"></script>
<script type="text/javascript" src="javascript/useful_function.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script type="text/javascript">
    /** Determines how you're going to order the graphs by. */
    var orderBy = 'date';
    google.load('visualization', '1.0', {
        'packages': ['corechart'],
        callback: createPageElements
    });

    /**
     * Creates the various page elements from the data recieved from the query.
     * This function is called as soon as Google Visualization libraries are
     * loaded.
     */
    function createPageElements() {
        //alert("state is " + "{{state}}");
        //alert("beach is " + "{{beach}}");
        var state = "{{state}}";
<<<<<<< HEAD
		var beach = "{{beach}}";
		if (beach == "All_Beaches") {
			alert("Tripped");
			beach = -1;
			alert(beach);
		}
=======
        var beach = ("{{beach}}" == "All Beaches") ? -1 : "{{beach}}";
        alert("beach is " + beach);
>>>>>>> 29a1c8ef8ad222a39c196af07c02ddb04120ad3e
        var costQuery = new google.visualization.Query(createDataUrl("Master"));
        var volumeQuery = new google.visualization.Query(createDataUrl("Master"));
        var totalsQuery = new google.visualization.Query(createDataUrl("Master"));
        totalsQuery.setQuery("Select A, H, I, J, L Where B = '" + state +
            "' Order by A");
        totalsQuery.send(getTotalsAndCreateSelect);
        if (beach == -1) {
            costQuery.setQuery("Select C, J Where B = '" + state + "'" +
                " Order By C");
            volumeQuery.setQuery("Select C, I Where B = '" + state + "'" +
                " Order By C");
        } else {
            costQuery.setQuery("Select C, J Where A = '" + beach +
                "' and B = '" + state + "' Order by C");
            volumeQuery.setQuery("Select C, I Where A = '" + beach +
                "' and B = '" + state + "' Order by C");
        }
        costQuery.send(createCostVisualization);
        volumeQuery.send(createVolumeVisualization);
    }

    /**
     * Create the cost visualization graph. This function is called when a
     * call to query.send is called with this function passed in as the
     * parameter.
     *
     * @param response the response that is returned from the query
     */
    function createCostVisualization(response) {
        //alert("In the createCostVisualization function");
        if (response.isError()) {
            alert("Error in query: " + response.getMessage() + " " +
                response.getDetailedMessage());
            return;
        }

        var data = response.getDataTable();
        var visualization = new google.visualization.ColumnChart(
            document.getElementById('cost_canvas'));
        var hAxisOptions;
        if (orderBy == 'date') {
            hAxisOptions = {
                slantedText: 'true'
            };
        } else {
            hAxisOptions = {
                slantedText: 'true',
                textPosition: 'none'
            };
        }

        visualization.draw(data, {
            title: 'Cost',
            titleTextStyle: {
                fontSize: 16,//16
                fontName: "san-serif"
            },
            legend: 'none',
            backgroundColor: 'transparent',
            hAxis: hAxisOptions,
            vAxis: {
                format: '$###,###,###.##'
            }
        });
    }

    /**
     * Creates the volume visualization graph. This function is called when a
     * call to query.send is called with this function passed in as the
     * parameter.
     *
     * @param response the response that is returned from the query
     */
    function createVolumeVisualization(response) {
        //alert("In the createVolumeVisualization function");
        if (response.isError()) {
            alert("Error in query: " + response.getMessage() + " " +
                response.getDetailedMessage());
            return;
        }

        var data = response.getDataTable();
        var visualization = new google.visualization.ColumnChart(
            document.getElementById('volume_canvas'));
        var hAxisOptions;
        if (orderBy == 'date') {
            hAxisOptions = {
                slantedText: 'true'
            };
        } else {
            hAxisOptions = {
                slantedText: 'true',
                textPosition: 'none'
            };
        }

        visualization.draw(data, {
            title: 'Volume',
            titleTextStyle: {
                fontSize: 16,
                fontName: "san-serif"
            },
            legend: 'none',
            backgroundColor: 'transparent',
            colors: ['#FF3F42'],
            hAxis: hAxisOptions
        });
    }

    /**
     * Gets the totals for the beaches and creates the select (drop-down menu)
     * for the page.  This function is seperate from the two other create
     * functions because the data needed for these is different from the other
     * two functions.
     *
     * @param response the response that is returned from the query
     */
    function getTotalsAndCreateSelect(response) {
        //alert("What is the response it is " + response);
        //alert("In the getTotalsAndCreateSelect function");
        var data = response.getDataTable();
        //alert("the data is in getTotalsAndCreateSelect" + data);
        var beaches = new Array();
        var totals = new Object();
        totals.cost = 0;
        totals.cost2010 = 0;
        totals.episodes = 0;
        totals.len = 0;
        totals.volume = 0;

        var lengthColumn = 1;
        var volumeColumn = lengthColumn + 1;
        var costColumn = volumeColumn + 1;
        var cost2010Column = costColumn + 1;

        for (var i = 0; i < data.getNumberOfRows(); i++) {
            beach = trim(data.getValue(i, 0));
            if (beach.length > 0 && (beaches.indexOf(beach) == -1)) {
                beaches.push(beach);
                var select = document.getElementById('perpage');
                var option = document.createElement('OPTION');
                option.id = beach;
                option.text = beach;
                option.value = "visual?state={{state}}&beach=" + beach;
                select.add(option);
                //alert("HII2");
                /*if(select) {
                   alert("Then it exists!");
                } else {
                    alert("Then nothing there bro");
                }
                select.add(option);

                alert("HII3");*/
            }
            //TODO RIGHT HERE!!!!!!!!!!!!!!!! ALl beaches total
            if (beach == '{{beach}}') {
                totals.episodes++;
                totals.cost += data.getValue(i, costColumn);
                totals.cost2010 += data.getValue(i, cost2010Column);
                totals.len += data.getValue(i, lengthColumn);
                totals.volume += data.getValue(i, volumeColumn);
            }
        }

        document.getElementById('total_episodes').value =
            numberWithCommas(totals.episodes);
        document.getElementById('total_cost').value = '$' + numberWithCommas(
            Math.round(totals.cost));
        document.getElementById('total_2010cost').value = '$' +
            numberWithCommas(
                Math.round(totals.cost2010));
        document.getElementById('total_volume').value =
            numberWithCommas(
                Math.round(totals.volume));
        document.getElementById('total_length').value =
            numberWithCommas(
                Math.round(totals.len));
        document.getElementById('totals').style.visibility = 'visible';
    }


    /**
     * Redraws the visualizations (graphs) when a new method of sorting is
     * selected (by means of the bullet buttons).
     *
     * @param sortBy the means by which to sort the graph
     */
    function redrawVisualization(sortBy) {
        //alert("In the redrawVisualization function");
        orderBy = sortBy;
        var volumeQuery = new google.visualization.Query(createDataUrl("Master"));
        var costQuery = new google.visualization.Query(createDataUrl("Master"));

        if ('{{beach}}' == 'All_Beaches') {
            if (orderBy == 'date') {
                costQuery.setQuery("Select C, J Order by C")
                volumeQuery.setQuery("Select C, I Order by C");
            } else {
                costQuery.setQuery("Select C, J Order by J")
                volumeQuery.setQuery("Select C, I Order by I");
            }
        } else {
            if (orderBy == 'date') {
                costQuery.setQuery(
                    "Select C, J Where A = '{{beach}}'" +
                    " Order by C");
                volumeQuery.setQuery(
                    "Select C, I Where A = '{{beach}}'" +
                    " Order by C");
            } else {
                costQuery.setQuery(
                    "Select C, J Where A = '{{beach}}'" +
                    " Order by J");
                volumeQuery.setQuery(
                    "Select C, I Where A = '{{beach}}'" +
                    " Order by I");
            }
        }

        costQuery.send(createCostVisualization);
        volumeQuery.send(createVolumeVisualization);
    }
</script>
<center>
    <h2>{{{beach}}}, {{{state}}}</h2></center>

<div class="row" align="center">
    <div class="col-sm-12">

        <div class="col-sm-6">
            <a href="oneState?state={{state}}">Return</a> to the state map page
        </div>

        <div class="col-sm-6">
            <a href=".">Return</a> to the Home page

        </div>

        <!--This is the end of the two pages link-->

    </div>
</div>

<br />
<br />
<div class="row">
    <div class="col-sm-12">
        <div class="col-sm-6">
            <!--This is the two select elements for the cost and volume-->
            <!--"window.open(
                         this.options[this.selectedIndex].value,
                         '_top');"-->
            <select id="perpage" onChange="if(this.value) window.location.href=this.options[this.selectedIndex].value, '_top' ">
                <option value="visual?state={{state}}&beach={{beach}}">
                    Select another beach
                </option>
                <option value="visual?state={{state}}&beach=All_Beaches">All</option>
            </select>
            <br />
            <select name="states" id="states" onChange="window.open(this.options[this.selectedIndex].
                                             value, '_top');">
                <option value=".">Select another state</option>
                <option value=".">Home</option>
                <option value="/oneState?state=AL">Alabama</option>
                <option value="/oneState?state=CA">California</option>
                <option value="/oneState?state=CT">Connecticut</option>
                <option value="/oneState?state=DE">Delaware</option>
                <option value="/oneState?state=FL">Florida</option>
                <option value="/oneState?state=GA">Georgia</option>
                <option value="/oneState?state=LA">Louisiana</option>
                <option value="/oneState?state=MA">Massachusetts</option>
                <option value="/oneState?state=MD">Maryland</option>
                <option value="/oneState?state=ME">Maine</option>
                <option value="/oneState?state=MS">Mississippi</option>
                <option value="/oneState?state=NC">North Carolina</option>
                <option value="/oneState?state=NJ">New Jersey</option>
                <option value="/oneState?state=NH">New Hampshire</option>
                <option value="/oneState?state=NY">New York</option>
                <option value="/oneState?state=RI">Rhode Island</option>
                <option value="/oneState?state=SC">South Carolina</option>
                <option value="/oneState?state=TX">Texas</option>
                <option value="/oneState?state=VA">Virginia</option>
                <option value="/oneState?state=WA">Washington</option>
            </select>
            <!--This is the end two select elements for the cost and volume-->
        </div>

        <div class="col-sm-6">
            <!--This is the table info-->
            <table cols="3" id="totals" style="visibility: hidden;">
                <tr>
                    <td align="right"><b>Beach Totals:</b></td>
                    <td width="150px"><font size="2px">Episodes:</font></td>
                    <td align="left">
                        <input type="text" id="total_episodes" class="textBox totals" style="font-size: 12px; text-align: right;"
                            size="15" readonly />
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td><font size="2px">Cost:</font></td>
                    <td align="left">
                        <input type="text" id="total_cost" class="textBox totals" style="font-size: 12px; text-align: right;"
                            size="15" readonly />
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td><font size="2px">Cost (in 2014 dollars):</font></td>
                    <td align="left">
                        <input type="text" id="total_2010cost" class="textBox totals" style="font-size: 12px; text-align: right;"
                            size="15" readonly />
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td><font size="2px">Volume (cubic yards):</font></td>
                    <td align="left">
                        <input type="text" id="total_volume" class="textBox totals" style="font-size: 12px; text-align: right;"
                            size="15" readonly />
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td><font size="2px">Length (feet):</font></td>
                    <td align="left">
                        <input type="text" id="total_length" class="textBox totals" style="font-size: 12px; text-align: right;"
                            size="15" readonly />
                    </td>
                </tr>
            </table>
            <!--End of Table info-->
        </div>
    </div>
</div>
<br /><br /><br />

<!--<div >USED TO HAVE style="z-index: 10; position: relative; top: -30px;"</div>-->
<center>
    <div class="row">
        <div class="col-sm-10">
            <div class="col-sm-6">
                <a href="beachtables?state={{state}}&beach={{beach}}">View</a> the
                <b>table</b> representation of this graph
            </div>
            <div class="col-sm-5">
                <!--sort by table-->
                <table cols="2">
                    <tr>
                        <td>
                            Sort by:
                        </td>
                        <form name="selects">
                            <td>
                                <label for="date">
                                    <input type="radio" id="date" name="sortby" value="date" checked onClick="redrawVisualization(this.value);"
                                    />Date
                                </label>
                                <label for="cv">
                                    <input type="radio" id="cv" name="sortby" value="cv" onClick="redrawVisualization(this.value);"
                                    /> Cost/Volume
                                </label>
                            </td>
                        </form>
                    </tr>
                </table>
                <!--End of the sort table -->
            </div>
        </div>
    </div>
</center>

<center>
<div class="row">
    <div class="col-md-12">
        <div id="map_canvas" style="height: 430px;">
            <div class="col-md-6">
                <div id="cost_canvas" style="z-index: 1;"></div>
            </div>
            <div class="col-md-6">
                <div id="volume_canvas" style="z-index: 1;"></div>
            </div>
        </div>
        <br />
    </div>
</div>
</center>
